@page "/profile"
@using EcommerceApp.Models
@using EcommerceApp.Services
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject AuthService AuthService
@inject CustomAuthenticationStateProvider AuthStateProvider
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<div class="min-h-screen bg-gray-50 py-8 px-4 sm:px-6 lg:px-8">
    <div class="max-w-2xl mx-auto">
        <div class="text-center mb-8">
            <div class="w-20 h-20 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full mx-auto mb-4 flex items-center justify-center">
                <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                </svg>
            </div>
            <h1 class="text-3xl font-bold text-gray-900 mb-2">Perfil de Usuario</h1>
            <p class="text-gray-600">Actualiza tu información personal</p>
        </div>

        @if (user != null)
        {
            <div class="bg-white shadow-xl rounded-2xl overflow-hidden">
                <div class="bg-gradient-to-r from-blue-500 to-purple-600 px-6 py-8 text-white">
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 text-center">
                        <div class="space-y-2">
                            <p class="text-blue-100 text-sm font-medium">Email</p>
                            <p class="text-white font-semibold">@user.Email</p>
                        </div>
                        <div class="space-y-2">
                            <p class="text-blue-100 text-sm font-medium">Rol</p>
                            <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-white bg-opacity-20 text-white">
                                @user.Role
                            </span>
                        </div>
                        <div class="space-y-2">
                            <p class="text-blue-100 text-sm font-medium">Miembro desde</p>
                            <p class="text-white font-semibold">@user.CreatedAt.ToString("dd/MM/yyyy")</p>
                        </div>
                    </div>
                </div>

                <div class="p-6 lg:p-8">
                    <EditForm Model="@updateModel" OnValidSubmit="HandleUpdate">
                        <DataAnnotationsValidator />
                        
                        <div class="space-y-6">
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div class="space-y-2">
                                    <label class="block text-sm font-semibold text-gray-700">Nombre</label>
                                    <InputText class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-gray-50 focus:bg-white" 
                                              @bind-Value="updateModel.FirstName" 
                                              placeholder="Ingresa tu nombre" />
                                    <ValidationMessage For="@(() => updateModel.FirstName)" class="text-red-500 text-sm mt-1" />
                                </div>

                                <div class="space-y-2">
                                    <label class="block text-sm font-semibold text-gray-700">Apellido</label>
                                    <InputText class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-gray-50 focus:bg-white" 
                                              @bind-Value="updateModel.LastName" 
                                              placeholder="Ingresa tu apellido" />
                                    <ValidationMessage For="@(() => updateModel.LastName)" class="text-red-500 text-sm mt-1" />
                                </div>
                            </div>

                            <div class="space-y-2">
                                <label class="block text-sm font-semibold text-gray-700">Teléfono</label>
                                <div class="relative">
                                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                        <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                                        </svg>
                                    </div>
                                    <InputText class="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-gray-50 focus:bg-white" 
                                              @bind-Value="updateModel.PhoneNumber" 
                                              placeholder="+52 123 456 7890" />
                                </div>
                                <ValidationMessage For="@(() => updateModel.PhoneNumber)" class="text-red-500 text-sm mt-1" />
                            </div>

                            <div class="space-y-2">
                                <label class="block text-sm font-semibold text-gray-700">Dirección</label>
                                <div class="relative">
                                    <div class="absolute top-3 left-3 pointer-events-none">
                                        <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                        </svg>
                                    </div>
                                    <InputTextArea class="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-gray-50 focus:bg-white resize-none" 
                                                  @bind-Value="updateModel.Address" 
                                                  rows="3"
                                                  placeholder="Ingresa tu dirección completa" />
                                </div>
                                <ValidationMessage For="@(() => updateModel.Address)" class="text-red-500 text-sm mt-1" />
                            </div>

                            @if (!string.IsNullOrEmpty(errorMessage))
                            {
                                <div class="@(errorMessage.Contains("exitosamente") ? "bg-green-50 border border-green-200 text-green-800" : "bg-red-50 border border-red-200 text-red-800") rounded-lg p-4">
                                    <div class="flex items-center">
                                        @if (errorMessage.Contains("exitosamente"))
                                        {
                                            <svg class="h-5 w-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                            </svg>
                                        }
                                        else
                                        {
                                            <svg class="h-5 w-5 text-red-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                            </svg>
                                        }
                                        <span class="font-medium">@errorMessage</span>
                                    </div>
                                </div>
                            }

                            <div class="pt-4">
                                <button type="submit" 
                                        class="w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-semibold py-4 px-6 rounded-lg transition-all duration-200 transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-blue-300 shadow-lg">
                                    <span class="flex items-center justify-center">
                                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12"></path>
                                        </svg>
                                        Actualizar Perfil
                                    </span>
                                </button>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        }
        else
        {
            <div class="bg-white shadow-xl rounded-2xl p-12 text-center">
                <div class="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mb-4"></div>
                <p class="text-gray-600 text-lg">Cargando perfil...</p>
            </div>
        }
    </div>
</div>

@code {
    private UserDto? user;
    private UpdateUserDto updateModel = new();
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");
        if (!string.IsNullOrEmpty(token))
        {
            var response = await AuthService.GetProfileAsync(token);
            if (response.Success)
            {
                user = response.Data;
                updateModel.FirstName = user.FirstName;
                updateModel.LastName = user.LastName;
                updateModel.PhoneNumber = user.PhoneNumber;
                updateModel.Address = user.Address;
            }
            else
            {
                errorMessage = response.Message;
            }
        }
    }

    private async Task HandleUpdate()
    {
        var token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");
        var response = await AuthService.UpdateProfileAsync(token, updateModel);
        if (response.Success)
        {
            user = response.Data;
            errorMessage = "Perfil actualizado exitosamente";
        }
        else
        {
            errorMessage = response.Message;
            foreach (var error in response.Errors)
            {
                errorMessage += $"\n{error}";
            }
        }
    }
}